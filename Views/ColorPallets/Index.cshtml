@model IEnumerable<ColorApplication.Models.ColorPallet>

@{
    ViewData["Title"] = "Index";
    var id = ViewData["ID"];
    ColorPallet x = new ColorPallet();
    string checkedA = "";
    string checkedB = "";
    if (id != null)
    {
        foreach (var item in Model)
        {
            if (item.Id.ToString() == id.ToString())
            {
                x = item;
            }
        }
    }
}

<div class="container p-5">
    <div class="row">
        <div class="col-4 p-0 m-0">

        </div>
        <div class="col-8"></div>
    </div>
    <div class="row ">
        <div class="col-sm-4  p-0 m-0 mb-3">
            <input type="color" id="colorInputId" class="colorInput  border-0 p-0 m-0 mb-3" oninput="convertColor('colorInputId')">


            <div class="text-end">

                <a class="text-white-50" data-bs-toggle="offcanvas" href="#offcanvasExample" role="button" data-bs-target="#offcanvasScrolling" aria-controls="offcanvasScrolling">View All Saved Pallets</a>
                &nbsp;&nbsp;&nbsp;&nbsp;
                <a class="text-white-50 text-end" href="#" onclick="AddToPallet()">Add Color to Pallet</a>
            </div>
        </div>

        @* Sliders: col-sm-8*@
        <partial name="_SlidersPartial" />
   

    </div>
    <div class="row mb-5">
        <div class="col-md-6 border border-1 border-dark p-2 d-flex flex-wrap mb-3" id="activePallet">
            
            @if (id != null)
            {
                <input type="hidden" id="palletId" value="@id"/>

                var colors = x.Pallet.Split('|');

                foreach (var color in colors)
                {

                    var rand = new Random();
                    var r = rand.Next(1000, 10000);
                    var r2 = 'c' + r.ToString();
                    var r2d = r2 + 'd';



                    <div class="dropdown" id="@r2d">
                        <button type="button" class="btn dropdown-toggle dbutton" id="@r2" data-bs-toggle="dropdown" aria-expanded="false" onclick="SetFocusedColor('@color')" style="background-color: @color">
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="@r2">
                            <li>
                                <a href="#" class="dropdown-item" onclick="DeleteColor('@r2d')">Remove Color</a>
                            </li>
                        </ul>
                    </div>
                }
            }


        </div>
        <div class="col-md-6">

            @if (id == null)
            {
                <div class="input-group input-group-sm ">
                    <span class="input-group-text border-0 bg-dark text-white-50" id="inputGroup-sizing-sm">Pallet Name</span>
                    <input onchange="SavePallet()" type="text" id="palletName" class="form-control bg-dark border-0 text-white" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm">
                </div>
                <div class="input-group input-group-sm mt-3">
                    <span class="input-group-text border-0 bg-dark text-white-50" id="inputGroup-sizing-sm">Description</span>
                    <input onchange="SavePallet()" type="text" id="palletDescription" class="form-control bg-dark border-0 text-white" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm">
                </div>
                <div class="form-check form-switch mt-2">
                    <input onchange="SavePallet()" class="form-check-input bg-secondary border-0" type="checkbox" id="palletPublic">
                    <label class="form-check-label text-white-50" for="palletPublic">Make these colors public?</label>
                </div>
                <div class="form-check form-switch mt-1">
                    <input onchange="SavePallet()" class="form-check-input bg-secondary border-0" type="checkbox" id="palletCopy">
                    <label class="form-check-label text-white-50" for="palletCopy">Allow people to copy these colors?</label>
                </div>
            }

            else
            {
                if (x.IsCopy == 1)
                {
                    checkedA = "checked";
                }
                if (x.IsPublic == 1)
                {
                    checkedB = "checked";
                }
                <div class="input-group input-group-sm ">
                    <span class="input-group-text border-0 bg-dark text-white-50" id="inputGroup-sizing-sm">Pallet Name</span>
                    <input onchange="SavePallet()" type="text" id="palletName" class="form-control bg-dark border-0 text-white" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm" value="@x.Name">
                </div>
                <div class="input-group input-group-sm mt-3">
                    <span class="input-group-text border-0 bg-dark text-white-50" id="inputGroup-sizing-sm">Description</span>
                    <input onchange="SavePallet()" type="text" id="palletDescription" class="form-control bg-dark border-0 text-white" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm" value="@x.Description">
                </div>
                <div class="form-check form-switch mt-2">
                    <input onchange="SavePallet()" class="form-check-input bg-secondary border-0" type="checkbox" id="palletPublic" @checkedB>
                    <label class="form-check-label text-white-50" for="palletPublic">Make these colors public?</label>
                </div>
                <div class="form-check form-switch mt-1">
                    <input onchange="SavePallet()" class="form-check-input bg-secondary border-0" type="checkbox" id="palletCopy" @checkedA>
                    <label class="form-check-label text-white-50" for="palletCopy">Allow people to copy these colors?</label>
                </div>
            }
        </div>
    </div>

    <partial name="_SideBarPartial" />

</div>
